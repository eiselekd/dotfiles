* permissions

takeown.exe /f <dir> /r
takeown.exe /f <file> 

use cygwin's chown / chmod to set mermissions. Otherwise
use Properties->Security (Advanced):
 - 1. Disable Inheritance
 - 2. Remove all other accounts
 - 3. Enable subfolders and files, all access parameters set
 - 4. check Replace all chind object permissions ...


 
* ATM on gigabrix

  Enable MEBx bios menue extension
  Reboot and press Ctrl-P 
  Login with default admin:admin
  Change pass (special char needed)
  Enable network provisioning
  Access port 16992
  Allocate user to use with Manageability Commander

** Ctrl
  Use Intel Management and Security Status (IMSS) tab on target.
  Use Manageability Commander Tool Mesh Edition from open-manageability or MeshCommander from same site
  Sol driver and services.msc Intel Management services and devmgmt.msc SOL com driver
  On target start open-manageability Outpost Tool and enable Serial agent

** links
[ http://www.virten.net/2013/11/howto-intel-nuc-remote-kvm-with-amt-powered-by-vpro/ ]
[ http://www.meshcommander.com/open-manageability ]
[ http://www.meshcommander.com/meshcommander ]
[ https://software.intel.com/en-us/articles/intel-active-management-technology-start-here-guide-intel-amt-9 ]

* cmd.exe scripting

 | Bash                            | cmd.exe                |
 |---------------------------------+------------------------|
 | . <script>                      | call "<batscript>.bat" |
 | $1, $2...                       | "%1", "%2"             |
 | if [ "%1" == "a" ] then; ... fi | if "%1"=="a" ( ... )   |
 | a="b"                           | set a="b"              |

* install win in qemu from usb stick

 $qemu-system-x86_64 -enable-kvm -device qemu-xhci -usb -device usb-host,vendorid=0x951,productid=0x16aa -boot menu=on -m 10000 -drive id=disk,file=/mnt/data-n0/vm/win10-passthrough.qcow2,if=none -device ahci,id=ahci -device ide-drive,drive=disk,bus=ahci.0

 
* gcard passthrough:

** radeon driver crash

 for legacy AMD Catalyst driver switch to qemu-machine type q35
 select machine q35 
 -machine pc-q35-2.11 
 SATA disk contollers 

 Radeon 5450

[1] https://www.redhat.com/archives/vfio-users/2016-January/msg00301.html
[2] https://lists.gnu.org/archive/html/qemu-devel/2016-10/msg08066.html
[3] https://bugzilla.redhat.com/show_bug.cgi?id=1408808

** mkinitramfs

skipcpio /boot/<img> > real
zcat real | cpio --extract

repackage:

[ "$(id -ru)" != 0 ] && cpio_owner_root="-R 0:0" 
cd "${DESTDIR}" && find . | cpio --quiet $cpio_owner_root -o -H newc | gzip >>"${outfile}" 

[1] https://askubuntu.com/questions/1065054/howto-skip-over-cpio-archive-when-multiple-cpio-archives-are-concatenated
[2] https://github.com/dracutdevs/dracut/tree/master/skipcpio

** cmdline

05:00.0 0300: 1002:68f9 # radeon cedar
05:00.1 0403: 1002:aa68 # hdmi audio
grub: pci-stub.ids=1002:68f9,1002:aa68

** spice view

apt-get install virt-viewer
virt-viewer --connect qemu+ssh://user@server/system vmname

** keyboard:

[1] https://unix.stackexchange.com/questions/198736/passthrough-ps-2-keyboard-to-guest-os

** arch threads
[1] https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF
[2] https://bbs.archlinux.org/viewtopic.php?id=162768&p=41
[3] https://www.reddit.com/r/pcmasterrace/comments/3lno0t/gpu_passthrough_revisited_an_updated_guide_on_how/
[4] https://www.evonide.com/non-root-gpu-passthrough-setup/#QEMU_setup

<qemu:commandline>
    <qemu:arg value='-vga'/>
    <qemu:arg value='none'/>
    <qemu:arg value='-bios'/>
    <qemu:arg value='/usr/lib/qemu/bios.bin'/>
    <qemu:arg value='-device'/>
    <qemu:arg value='ioh3420,bus=pcie.0,addr=1c.0,multifunction=on,port=1,chassis=1,id=root'/>
    <qemu:arg value='-device'/>
    <qemu:arg value='vfio-pci,host=01:00.0,bus=root,addr=00.0,multifunction=on,x-vga=on'/>
    <qemu:arg value='-device'/>
    <qemu:arg value='vfio-pci,host=01:00.1,bus=pcie.0'/>
  </qemu:commandline>

xmlns:qemu='http://libvirt.org/schemas/domain/qemu/1.0'

  <features>
    <acpi/>
    <apic/>
    <hyperv>
      <relaxed state='on'/>
      <vapic state='on'/>
      <spinlocks state='on' retries='8191'/>
      <vendor_id state='on' value='test'/>
    </hyperv>
    <kvm>
      <hidden state='on'/>
    </kvm>
    <vmport state='off'/>
  </features>


** OMVF :
apt-get install omvf 
and select uefi when createin vm
** win err: 


* linux test
 GK208 GeForce GT 710B
 - noveau : x11: Segfault 
            wayland: work, sound repeats 
 - nvidia : x11: works, sound repeats

* NVidia flash with

https://www.techpowerup.com/download/nvidia-nvflash/


sudo nvflash_linux  --save /tmp/nvidia.rom 

NVIDIA Firmware Update Utility (Version 5.414.0)
Simplified Version For OEM Only
Adapter: GeForce GT 710       (10DE,128B,0000,0000) H:--:NRM  S:00,B:05,D:00,F:00

Identifying EEPROM...
EEPROM ID (7F,9D42) : PMC Pm25LQ020 2.3-3.6V 2048Kx1S, page
Reading adapter firmware image...
IFR Data Size         : 1164 bytes
IFR CRC32             : CF1166A7
IFR Image Size        : 1536 bytes
IFR Image CRC32       : 66302A97
IFR Subsystem ID      : 0000-0000
Image Size            : 167936 bytes
Version               : 80.28.A6.00.11
RC32                : D3697E3F
Image Hash            : 2F6FCEF455A9D2462C3184827417106D
Subsystem ID          : 0000-0000
Hierarchy ID          : Normal Board
Chip SKU              : 203-0
Project               : 2132-0014
CDP                   : N/A
Build Date            : 10/09/15
Modification Date     : 01/06/16
UEFI Support          : Yes
UEFI Version          : 0x10033 (Jul 13 2015 @ 19761311 )
UEFI Variant Id       : 0x0000000000000004 ( GK1xx )
UEFI Signer(s)        : Microsoft Corporation UEFI CA 2011
InfoROM Version       : N/A
InfoROM Backup Exist  : NO
License Placeholder   : Absent
GPU Mode              : N/A
Saving of image completed.

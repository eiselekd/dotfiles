* Setup

** T460s

Intel NVme ssd: bios version 1.22 and uefi boot

Disable trackpad:

function disable_trackpad()
{
  l=`xinput list | grep Synaptics `
  if [ ! -z "$l" ]; then
    id=`expr "$l" : '.*id=\([0-9]\+\)'`
    xinput --disable $id
  fi
}


** X60s

Figure out key pressed:
$xev
Show keymapping:
$xmodmap -pke
X60s issues keycode 166 (left-page, XF86Back) and 167 (right-page, XF86Forward)
other keyboard issue 112 and 117,

$xmodmap -e "keycode  166 = Prior NoSymbol Prior"
$xmodmap -e "keycode  167 = Next NoSymbol Next"

*** determine X60s model

if  dmesg|grep X60s >/dev/null; then
echo "found X60s"
fi

*** links
[1] https://wiki.archlinux.org/index.php/xmodmap

**  /etc/default/keyboad

XKBLAYOUT="de"

then: dpkg-reconfigure console-setup

** zfs

apt-add-repository universe
apt update
apt install --yes debootstrap gdisk zfs-initramfs

*** Partition

sgdisk -Z -n9:-8M:0 -t9:bf07 -c9:Reserved -n2:-8M:0 -t2:ef02 -c2:GRUB  -n3:-512M:0 -t3:ef00 -c3:UEFI -n1:0:0 -t1:bf01 -c1:ZFS <dev>

dd if=/dev/zero of=/dev/disk/by-id/nvme-eui.0000000001000000e4d25c4ddd934d01-part1
dd if=/dev/zero of=/dev/disk/by-id/nvme-eui.0000000001000000e4d25c4ddd934d01-part~2
dd if=/dev/zero of=/dev/disk/by-id/nvme-eui.0000000001000000e4d25c4ddd934d01-part~9
sgdisk -Z -n9:-8M:0 -t9:bf07 -c9:Reserved -n2:-8M:0 -t2:ef02 -c2:GRUB -n1:0:0 -t1:bf01 -c1:ZFS /dev/disk/by-id/nvme-eui.0000000001000000e4d25c4ddd934d01


*** pools

zfs snapshot rpool/ROOT/ubuntu/ubuntu@install-minimal
zfs list -t snapshot
zfs create rpool/home/eiselekd
zfs create -o mountpoint=/src rpool/src
zfs create -o mountpoint=/work rpool/work

*** scrubbing

zpool scrub <pool>
zpool status

*** snapshots

Take snapshot:
$zfs snapshot rpool/ROOT@date
Take snapshot recursive:
$zfs snapshot -r rpool/ROOT@date

List snapshots recursive
$zfs list -r -t snapshot rpool/ROOT
List usage:
$zfs get -H -o name,value -r used rpool/ROOT

*** links
[1] http://dotfiles.tnetconsulting.net/articles/2016/0327/ubuntu-zfs-native-root.html
[2] https://github.com/zfsonlinux/zfs/wiki/Ubuntu-17.04-Root-on-ZFS

** zfs kernel dep
PATH="/opt/$(uname -r)/usr/bin:/opt/$(uname -r)/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
/usr/share/initramfs-tools/hooks/zfs :  initramfs.diff


** X11
disable trackpad:
xinput set-prop 13 "Device Enabled" 0

xmonad test:
apt-get install xserver-xephyr
Xephyr :1 -ac -screen 800x600
run
DISPLAY=:1 xmonad

** acpi
acpi -b : battery life

** network

# 16.04
move eth0 (or similar if) to /etc/network/interfaces.d
decomment auto to prevent startjob systemd
#auto eth0
#iface eth0 inet dhcp

# simple
nmcli radio
nmcli device

nmcli device wifi rescan
nmcli device wifi list
nmcli device wifi connect <SSID-Name> password <wireless-password>

# status:
nmcli dev wifi list

# connect to wifi
nmcli con add con-name <myconname> ifname <ifname> type wifi ssid <ssid>
nmcli con modify MyCafe wifi-sec.key-mgmt wpa-psk
nmcli con modify MyCafe wifi-sec.psk <password>
nmcli radio wifi on
nmcli con show
nmcli con up uuid <uuid>
# unconnect
nmcli radio wifi off
nmcli con del <con-name>


*** links
[1] https://docs.fedoraproject.org/en-US/Fedora/25/html/Networking_Guide/sec-Connecting_to_a_Network_Using_nmcli.html
[2] https://nullr0ute.com/2016/09/connect-to-a-wireless-network-using-command-line-nmcli/


** systemd

# show services
systemctl status
# show past logging
journalctl
# show active logging:
journalctl -f
# show active loggin only resolved:
journalctl -f -u systemd-resolved

# services
service systemd-resolved restart
systemctl restart systemd-resolved.service
# systemd-resolved:
systemd-resolve --status
systemd-resolve www.test.com
# dns.watch:
84.200.69.80
# debug logging for systemd-resolved:
mkdir -p /etc/systemd/system/systemd-resolved.service.d
echo -e "[Service]\nEnvironment=SYSTEMD_LOG_LEVEL=debug" >>Â‰ /etc/systemd/system/systemd-resolved.service.d/log-level.conf
systemctl daemon-reload
systemctl restart systemd-resolved.service

# cmdline
systemd_log_level=debug

# unbound:
sudo systemctl disable systemd-resolved
sudo systemctl stop systemd-resolved
/etc/NetworkManager/NetworkManager.conf
 : add [main] : dns=unbound
sudo systemctl enable unbound-resolvconf
sudo systemctl enable unbound

#/lib/systemd/systemd-sysv-install enable unbound


*** systemd-networkd systemd-resolved

/etc/network/interfaces to:
auto lo
iface lo inet loopback
and remove /etc/network/interfaces.d

start:

#+begin_src bash:
systemctl start systemd-networkd.service
systemctl start systemd-resolved.service
systemctl enable systemd-networkd.service
systemctl enable systemd-resolved.service
#+end_src

#+begin_src /etc/systemd/network/bridge0.netdev:
[NetDev]
Name=br0
Kind=bridge
#+end_src

#+begin_src /etc/systemd/network/bridge.network:
[Match]
Name=br0
[Network]
DHCP=ipv4
#+end_src

#+begin_src /etc/systemd/network/eth.network:
[Match]
Name=en*
[Network]
Bridge=br0
#+end_src

=> all en* interfaces under bridge


*** links
[1] https://fedoraproject.org/wiki/How_to_debug_Systemd_problems
[2] http://wiki.ipfire.org/en/dns/public-servers
[3] http://www.hecticgeek.com/2017/04/ubuntu-17-04-systemd-dns-issues/

** docker
/etc/default/docker:
+ DOCKER_OPTS="--storage-driver=zfs"
service docker restart
systemctl restart docker

docker info
...
Storage Driver: zfs
...

docker run -it ubuntu  bash
docker run -it ubuntu:trusty  bash

*** build from Dockerfile

from dir of Dockerfile:
docker build -t <imagename> .

# create container and run interactive (-i)
docker run --name <containername> -v <hostpath>:<targetpath> -ti <imagename>
# restart container
docker start -i <containername>

*** building with docker-compose

docker-compose.yml:
docker-compose up -d
docker-compose up -d --build

teardown:
docker-compose rm --all
docker rmi <imgid>
docker rm <containeridid>


*** links
[1] https://www.youtube.com/watch?v=nDmvwevnJNc&feature=youtu.be

** kernel and zfs recompile

apt install rpm autoconf libtool uuid-dev libblkid-dev attr-dev

recompile mainline with deb-pkg:

git clone git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
git clone https://github.com/zfsonlinux/spl
git clone https://github.com/zfsonlinux/zfs
git://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git

(cd linux; make -j `getconf _NPROCESSORS_ONLN` deb-pkg LOCALVERSION=-custom)

d=`pwd`

(
 cd spl
 git checkout master
 sh autogen.sh
 ./configure --with-linux=$d/linux --with-linux-obj=$d/linux
 make -s -j `getconf _NPROCESSORS_ONLN` ; make deb
)
(
cd ../zfs
git checkout master
sh autogen.sh
./configure --with-spl=$d/spl --with-spl-obj=$d/spl --with-linux=$d/linux --with-linux-obj=$d/linux
make -s -j `getconf _NPROCESSORS_ONLN` ; make deb
)

... dpkg -i kmod-*deb : zfs-kmod-0.7.0-40_gdb4c1adaf.src.rpm


cd /lib/modules/<version>
mkdir kernel/zfs
cp -r extra/zfs/*  kernel/zfs/
cp -r extra/spl/*  kernel/zfs/
depmod -a <version>

possibly: echo zfs >> /etc/initramfs-tools/modules
update-initramfs -u



add
GRUB_CMDLINE_LINUX_DEFAULT=" boot=zfs "
to /etc/default/grub
and update-grub

*** zfs-initramfs : for 7.0.0 needed


cp zfs-import-cache.service /lib/systemd/system/zfs-import-cache.service
cp zfs-mount.service /lib/systemd/system/
cp zfs-share.service /lib/systemd/system/
cp zfs.target /lib/systemd/system/
cp system/zfs-zed.service /lib/systemd/system/

> change /usr/local/ prefix to / in service definitions

systemctl enable zfs-import-cache
systemctl enable zfs-mount
systemctl enable zfs-share
systemctl enable zfs.target
systemctl enable zfs-zed



*** zfs compile problem

tests/functions/libzfs :

--- a/tests/zfs-tests/tests/functional/libzfs/Makefile.am
+++ b/tests/zfs-tests/tests/functional/libzfs/Makefile.am
@@ -13,7 +13,8 @@ DEFAULT_INCLUDES += \
        -I$(top_srcdir)/lib/libspl/include

 many_fds_LDADD = \
-       $(top_builddir)/lib/libzfs/libzfs.la
+       $(top_builddir)/lib/libzfs/libzfs.la \
+       $(top_builddir)/lib/libzfs_core/libzfs_core.la


../../lib/libzfs/.libs/libzfs.so: undefined reference to `lzc_load_key'
../../lib/libzfs/.libs/libzfs.so: undefined reference to `lzc_promote'
../../lib/libzfs/.libs/libzfs.so: undefined reference to `lzc_change_key'
../../lib/libzfs/.libs/libzfs.so: undefined reference to `lzc_rollback_to'
../../lib/libzfs/.libs/libzfs.so: undefined reference to `lzc_unload_key'

eiselekd@HOSTNAME:~/git/dotfiles/ubuntu$ gcc --version
gcc (Ubuntu 6.3.0-12ubuntu2) 6.3.0 20170406
Copyright (C) 2016 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

eiselekd@HOSTNAME:~/git/dotfiles/ubuntu$ lsb_release -a
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 17.04
Release:        17.04
Codename:       zesty

*** zfs 7.1 patch:

diff --git a/cmd/mount_zfs/Makefile.am b/cmd/mount_zfs/Makefile.am
index bc9fb4c34..d4d7a7587 100644
--- a/cmd/mount_zfs/Makefile.am
+++ b/cmd/mount_zfs/Makefile.am
@@ -16,4 +16,5 @@ mount_zfs_SOURCES = \

 mount_zfs_LDADD = \
 	$(top_builddir)/lib/libnvpair/libnvpair.la \
-	$(top_builddir)/lib/libzfs/libzfs.la
+	$(top_builddir)/lib/libzfs/libzfs.la \
+	$(top_builddir)/lib/libzfs_core/libzfs_core.la
diff --git a/cmd/zdb/Makefile.am b/cmd/zdb/Makefile.am
index ea6806b2c..4685bec20 100644
--- a/cmd/zdb/Makefile.am
+++ b/cmd/zdb/Makefile.am
@@ -15,4 +15,5 @@ zdb_SOURCES = \
 zdb_LDADD = \
 	$(top_builddir)/lib/libnvpair/libnvpair.la \
 	$(top_builddir)/lib/libzfs/libzfs.la \
+	$(top_builddir)/lib/libzfs_core/libzfs_core.la \
 	$(top_builddir)/lib/libzpool/libzpool.la
diff --git a/cmd/zed/Makefile.am b/cmd/zed/Makefile.am
index 53d5aa71c..fbd650f4e 100644
--- a/cmd/zed/Makefile.am
+++ b/cmd/zed/Makefile.am
@@ -42,7 +42,8 @@ zed_SOURCES = $(ZED_SRC) $(FMA_SRC)
 zed_LDADD = \
 	$(top_builddir)/lib/libnvpair/libnvpair.la \
 	$(top_builddir)/lib/libuutil/libuutil.la \
-	$(top_builddir)/lib/libzfs/libzfs.la
+	$(top_builddir)/lib/libzfs/libzfs.la \
+	$(top_builddir)/lib/libzfs_core/libzfs_core.la

 zed_LDADD += -lrt
 zed_LDFLAGS = -pthread
diff --git a/cmd/zhack/Makefile.am b/cmd/zhack/Makefile.am
index f720e8286..12c0e0a4d 100644
--- a/cmd/zhack/Makefile.am
+++ b/cmd/zhack/Makefile.am
@@ -12,4 +12,5 @@ zhack_SOURCES = \
 zhack_LDADD = \
 	$(top_builddir)/lib/libnvpair/libnvpair.la \
 	$(top_builddir)/lib/libzfs/libzfs.la \
+	$(top_builddir)/lib/libzfs_core/libzfs_core.la \
 	$(top_builddir)/lib/libzpool/libzpool.la
diff --git a/cmd/zinject/Makefile.am b/cmd/zinject/Makefile.am
index b709a2f5a..b50114f23 100644
--- a/cmd/zinject/Makefile.am
+++ b/cmd/zinject/Makefile.am
@@ -14,4 +14,5 @@ zinject_SOURCES = \
 zinject_LDADD = \
 	$(top_builddir)/lib/libnvpair/libnvpair.la \
 	$(top_builddir)/lib/libzfs/libzfs.la \
+	$(top_builddir)/lib/libzfs_core/libzfs_core.la \
 	$(top_builddir)/lib/libzpool/libzpool.la
diff --git a/cmd/zpool/Makefile.am b/cmd/zpool/Makefile.am
index d7e1741c1..e2ee34137 100644
--- a/cmd/zpool/Makefile.am
+++ b/cmd/zpool/Makefile.am
@@ -16,7 +16,8 @@ zpool_SOURCES = \
 zpool_LDADD = \
 	$(top_builddir)/lib/libnvpair/libnvpair.la \
 	$(top_builddir)/lib/libuutil/libuutil.la \
-	$(top_builddir)/lib/libzfs/libzfs.la
+	$(top_builddir)/lib/libzfs/libzfs.la \
+	$(top_builddir)/lib/libzfs_core/libzfs_core.la

 zpool_LDADD += -lm $(LIBBLKID)

diff --git a/cmd/zstreamdump/Makefile.am b/cmd/zstreamdump/Makefile.am
index f80b5018e..1ec2daee1 100644
--- a/cmd/zstreamdump/Makefile.am
+++ b/cmd/zstreamdump/Makefile.am
@@ -11,4 +11,5 @@ zstreamdump_SOURCES = \

 zstreamdump_LDADD = \
 	$(top_builddir)/lib/libnvpair/libnvpair.la \
-	$(top_builddir)/lib/libzfs/libzfs.la
+	$(top_builddir)/lib/libzfs/libzfs.la \
+	$(top_builddir)/lib/libzfs_core/libzfs_core.la
diff --git a/cmd/ztest/Makefile.am b/cmd/ztest/Makefile.am
index 930a7ec3a..c911a9ce8 100644
--- a/cmd/ztest/Makefile.am
+++ b/cmd/ztest/Makefile.am
@@ -17,6 +17,7 @@ ztest_SOURCES = \
 ztest_LDADD = \
 	$(top_builddir)/lib/libnvpair/libnvpair.la \
 	$(top_builddir)/lib/libzfs/libzfs.la \
+	$(top_builddir)/lib/libzfs_core/libzfs_core.la \
 	$(top_builddir)/lib/libzpool/libzpool.la

 ztest_LDADD += -lm
diff --git a/tests/zfs-tests/tests/functional/libzfs/Makefile.am b/tests/zfs-tests/tests/functional/libzfs/Makefile.am
index d885bc1ab..642dd1472 100644
--- a/tests/zfs-tests/tests/functional/libzfs/Makefile.am
+++ b/tests/zfs-tests/tests/functional/libzfs/Makefile.am
@@ -13,7 +13,8 @@ DEFAULT_INCLUDES += \
 	-I$(top_srcdir)/lib/libspl/include

 many_fds_LDADD = \
-	$(top_builddir)/lib/libzfs/libzfs.la
+	$(top_builddir)/lib/libzfs/libzfs.la \
+	$(top_builddir)/lib/libzfs_core/libzfs_core.la

 pkgexec_PROGRAMS = many_fds
 many_fds_SOURCES = many_fds.c




*** wifi t460s

[    6.218916] iwlwifi 0000:04:00.0: no suitable firmware found!
[    6.220111] iwlwifi 0000:04:00.0: minimum version required: iwlwifi-8000C-22
[    6.221293] iwlwifi 0000:04:00.0: maximum version supported: iwlwifi-8000C-30
[    6.222504] iwlwifi 0000:04:00.0: check git://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git

cp linux-firmware/iwlwifi-8265-22.ucode /lib/firmware/

*** links
[1] https://wiki.ubuntu.com/KernelTeam/GitKernelBuild
[2] https://github.com/zfsonlinux/zfs/wiki/Building-ZFS

** xterm

Add support for bracket matching highlight for 3-button click

apt source xterm
suco apt build-dep xterm
cat xterm_button.c  xterm_charproc.diff xterm_ptyx.h | patch -p1 -d <xterm-dir>
cd xterm-dir
debuild -us -uc
and install package

*** .Xresources
xterm*savelines: 16384
xterm*on3Clicks: bracket


xrdb -merge .Xresources
xrdb -query
*** links
[1] https://lukas.zapletalovi.com/2013/07/hidden-gems-of-xterm.html

** eclipse

***openjdk 9 :
 1. ln -s /usr/lib/jvm/java-9-openjdk-amd64/lib /usr/lib/jvm/java-9-openjdk-amd64/conf
 2. eclipse.init:
  -vmargs
+ --add-modules=java.se.ee
  -Dosgi.requiredJavaVersion=1.8



** ipython

with cling binary snapshot: cd share/cling/Jupyter/kernel
pip install -e .
add .local/bin to PATH

jupyter notebook:
pip3 install --upgrade pip
pip3 install jupyter

** perf
 linux-4.13 and perf:
 sudo apt install  libelf-dev  libaudit-dev  libgtk2.0-dev  systemtap-sdt-dev  libgtk2.0-dev liblzma-dev libbfd-dev libdw-dev libiberty-dev binutils-dev zlib1g-dev
 cd linux-4.13/tools/perf && make

** recompile ubuntu package
DEB_BUILD_OPTIONS="debug nostrip noopt"         dpkg-buildpackage -us -uc -b
DEB_BUILD_OPTIONS="debug nostrip noopt nocheck" dpkg-buildpackage -us -uc -b
(-b build binary only to skip dpkg-source problems)

** uart

/etc/minicom/minirc.usb0
pu port             /dev/ttyUSB0
pu baudrate         115200
pu rtscts           No
pu xonxoff          Yes

* networking
** Virtualbox
*** create bridge
# https://www.virtualbox.org/wiki/Advanced_Networking_Linux
PATH=/sbin:/usr/bin:/bin:/usr/bin
# create a tap
tunctl -t tap1 -g vboxusers
ip link set up dev tap1
# create the bridge
brctl addbr br0
brctl addif br0 tap1
# set the IP address and routing
ip link set up dev br0
ip addr add 10.1.1.1/24 dev br0
ip route add 10.1.1.0/24 dev br0

*** shutdown
tunctl -d tap1

*** create forwarding
# https://www.virtualbox.org/wiki/Advanced_Networking_Linux
INTIF="br0"
EXTIF="wlp4s0"
echo 1 > /proc/sys/net/ipv4/ip_forward
# clear existing iptable rules, set a default policy
iptables -P INPUT ACCEPT
iptables -F INPUT
iptables -P OUTPUT ACCEPT
iptables -F OUTPUT
iptables -P FORWARD DROP
iptables -F FORWARD
iptables -t nat -F
# set forwarding and nat rules
iptables -A FORWARD -i $EXTIF -o $INTIF -j ACCEPT
iptables -A FORWARD -i $INTIF -o $EXTIF -j ACCEPT
iptables -t nat -A POSTROUTING -o $EXTIF -j MASQUERADE

***  shutdown

# clear existing iptable rules, set a default policy
#iptables -P INPUT ACCEPT
#iptables -F INPUT
#iptables -P OUTPUT ACCEPT
#iptables -F OUTPUT
#iptables -P FORWARD DROP
#iptables -F FORWARD
#iptables -t nat -F
#
## disable forwarding
#echo 0 > /proc/sys/net/ipv4/ip_forward
#echo 1 > /proc/sys/net/ipv4/ip_dynaddr

# possibley do:
# insert NAT rule
#iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
# enable forwarding
#echo 1 > /proc/sys/net/ipv4/ip_forward



** wifi monitor
Open monitor example:
# setup /etc/network/interfaces
iface mon0 inet manual
iface mon0 inet6 manual
iface phy0.mon inet manual
iface phy1.mon inet manual

iw phy <phy-with-"iw dev"-i.e.-phy1> interface add mon0 type monitor flags none control otherbss
# or "iw dev <dev> set type monitor"

ifconfig mon0 up promisc
# delete maneaged device or add "iface <managed-iface> inet6 manual
iw dev <managed-dev-ie.wlx60e3271fed8e> del

iw dev mon0 set channel 11


** wifi hopstapd

/etc/NetworkManager/NetworkManager.conf
[keyfile]
unmanaged-devices=interface-name:wlxf4f26d1cdf6a

systemctl restart NetworkManager

hostapd -dd /etc/hostapd/hostapd.conf

** debug NetworkManager.
service NetworkManager stop
NM_PPP_DEBUG=1 /usr/sbin/NetworkManager --no-daemon

*** /etc/hostapd/hostapd.conf

# Schnittstelle und Treiber
interface=wlxf4f26d1cdf6a
driver=nl80211

# WLAN-Konfiguration
ssid=WLAN_AP-SSID
channel=2

# ESSID sichtbar
ignore_broadcast_ssid=0

# LÃ¤ndereinstellungen
country_code=DE
ieee80211d=1

# Ãœbertragungsmodus
hw_mode=g

# Optionale Einstellungen
# supported_rates=10 20 55 110 60 90 120 180 240 360 480 540

# Draft-N Modus aktivieren (optional, nur fÃ¼r entsprechende Karten)
# ieee80211n=1

# Ãœbertragungsmodus / Bandbreite 40MHz
# ht_capab=[HT40+][SHORT-GI-40][DSSS_CCK-40]

# Beacons
beacon_int=100
dtim_period=2

# MAC-Authentifizierung
macaddr_acl=0

# max. Anzahl der Clients
max_num_sta=20

# GrÃ¶ÃŸe der Datenpakete/Begrenzung
rts_threshold=2347
fragm_threshold=2346

# hostapd Log Einstellungen
logger_syslog=-1
logger_syslog_level=2
logger_stdout=-1
logger_stdout_level=2

# temporÃ¤re Konfigurationsdateien
dump_file=/tmp/hostapd.dump
ctrl_interface=/var/run/hostapd
ctrl_interface_group=0

# Authentifizierungsoptionen
auth_algs=3

# wmm-FunktionalitÃ¤t
wmm_enabled=0

# VerschlÃ¼sselung / hier rein WPA2
wpa=2
rsn_preauth=1
rsn_preauth_interfaces=wlxf4f26d1cdf6a
wpa_key_mgmt=WPA-PSK
rsn_pairwise=CCMP

# SchlÃ¼sselintervalle / Standardkonfiguration
wpa_group_rekey=600
wpa_ptk_rekey=600
wpa_gmk_rekey=86400

# ZugangsschlÃ¼ssel (PSK) / hier in Klartext (ASCII)
wpa_passphrase=123testing





# #interface=wlan0
# #interface=wlp3s0
# interface=wlxf4f26d1cdf6a
# driver=nl80211
# ssid=my_ap
# hw_mode=g
# channel=6
# macaddr_acl=0
# auth_algs=1
# ignore_broadcast_ssid=0
# wpa=3
# wpa_passphrase=my_password
# wpa_key_mgmt=WPA-PSK
# wpa_pairwise=TKIP
# rsn_pairwise=CCMP



** wireshark capture

*** nonroot user capure
groupadd wireshark
usermod -a -G wireshark user1
usermod -a -G wireshark root
newgrp wireshark
chgrp wireshark /usr/local/bin/dumpcap
chmod 755 /usr/local/bin/dumpcap
setcap cap_net_raw,cap_net_admin=eip /usr/local/bin/dumpcap
getcap /usr/local/bin/dumpcap

** pptp on pi
sudo apt-get install avahi-daemon pptpd
raspi-config -> change hostname
test:
sudo apt-get install avahi-utils
avahi-browse -a
ping rpi0.local

*** links
[1] https://www.howtogeek.com/51237/setting-up-a-vpn-pptp-server-on-debian/
* Add Win10 to grub

https://help.ubuntu.com/community/UEFI
use boot-repair to convert o uefi

sudo blkid /dev/sda2
Then edit /etc/grub.d/40_custom, and at the end of the file add:

menuentry "Windows 10" --class windows --class os {
   insmod ntfs
   search --no-floppy --set=root --fs-uuid $your_uuid_here$
   ntldr /bootmgr
}

menuentry "Windows 10 uefi" --class windows --class os {
  insmod ntfs
  set root=(hd0,gpt2)
  chainloader (${root})/EFI/Microsoft/Boot/bootmgfw.efi
  boot
}

** efi part

mkfs.fat -F32 /dev/sdxY
sudo mount /dev/sdXY /mnt/boot/efi

sudo mount /dev/sdXW /mnt/
# sudo mount /dev/sdXY /mnt/boot if seperate

sudo mount -o bind /dev /mnt/dev
sudo mount -o bind /sys /mnt/sys
sudo mount -t proc /proc /mnt/proc
sudo chroot /mnt /bin/bash

grub-install /dev/sdX # where /dev/sdX is the main drive where /dev/sdXW is a partition of
grub-update # generate /boor/grub/grub.cfg (from /etc/grub.d/*)

convert msdos part to gpt with gdisk

** links
[ https://askubuntu.com/questions/661947/add-windows-10-to-grub-os-list ]
[ http://www.rodsbooks.com/gdisk/index.html ]
[ https://wiki.ubuntuusers.de/EFI_Problembehebung/ ]
[ https://wiki.ubuntuusers.de/GRUB_2/Reparatur/ ]




* rc.local

#+BEGIN_SRC file:/etc/systemd/system/rc-local.service

[Unit]
Description=/etc/rc.local Compatibility
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target

#+END_SRC

sudo systemctl enable rc-local

* emacs with xwidget webkit

sudo apt-get build-dep  emacs25
sudo apt-get install libgtk-3-dev
sudo apt-get install libwebkitgtk-dev
sudo apt-get install libwebkitgtk-3.0-dev
sudo apt-get install libwebkit2gtk-4.0-dev

git clone -b master git://git.sv.gnu.org/emacs.git
cd emacs
./autogen.sh
./configure --prefix=${HOME}/bin-emacs --with-xwidgets --with-x-toolkit=gtk3 --with-gif --with-jpeg --with-png --with-rsvg --with-tiff --with-xpm --with-gpm=no --with-dbus

make bootstrap
make install

* tmux

tmux new -s eap

tmux attach -t eap
detach:
ctrl-b d

* alsa

sudo apt-get install pavucontrol pulseaudio
pulseaudio -D
pacmd info
pavucontrol

* dolphin filemanager
apt-get install dolphin kio-extras
smb://<ip> ...
nfs://<ip> ...

* login
disable gui login:
sudo systemctl enable multi-user.target --force
sudo systemctl set-default multi-user.target

sudo systemctl enable graphical.target --force
sudo systemctl set-default graphical.target
